loki.relabel "logs_default_windows_application" {
	forward_to = [loki.write.logs_default.receiver]

	rule {
		source_labels = ["computer"]
		target_label  = "host"
	}
}

loki.source.windowsevent "logs_default_windows_application" {
	eventlog_name = "Application"
	poll_interval = "0s"
	forward_to    = [loki.relabel.logs_default_windows_application.receiver]
	labels        = {
		job = "windows-application",
	}
	legacy_bookmark_path = "./bookmark-application.xml"
}

loki.relabel "logs_default_windows_system" {
	forward_to = [loki.write.logs_default.receiver]

	rule {
		source_labels = ["computer"]
		target_label  = "host"
	}
}

loki.source.windowsevent "logs_default_windows_system" {
	eventlog_name = "System"
	poll_interval = "0s"
	forward_to    = [loki.relabel.logs_default_windows_system.receiver]
	labels        = {
		job = "windows-system",
	}
	legacy_bookmark_path = "./bookmark-system.xml"
}

loki.relabel "logs_default_windows_security" {
	forward_to = [loki.write.logs_default.receiver]

	rule {
		source_labels = ["computer"]
		target_label  = "host"
	}
}

loki.source.windowsevent "logs_default_windows_security" {
	eventlog_name = "Security"
	poll_interval = "0s"
	forward_to    = [loki.relabel.logs_default_windows_security.receiver]
	labels        = {
		job = "windows-security",
	}
	legacy_bookmark_path = "./bookmark-security.xml"
}

loki.write "logs_default" {
	endpoint {
		url = "http://loki.local.lan:3100/loki/api/v1/push"
	}
	external_labels = {}
}

prometheus.exporter.self "integrations_agent" { }

discovery.relabel "integrations_agent" {
	targets = prometheus.exporter.self.integrations_agent.targets

	rule {
		target_label = "job"
		replacement  = "integrations/agent"
	}
}

prometheus.scrape "integrations_agent" {
	targets    = discovery.relabel.integrations_agent.output
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/agent"
}

prometheus.remote_write "integrations" {
	external_labels = {
		env = "{{ env }}",
	}

	endpoint {
		url = "http://prom.local.lan:9090/api/v1/write"

		queue_config { }

		metadata_config { }
	}
}

prometheus.exporter.windows "integrations_windows_exporter" {
	enabled_collectors = [{{ collectors }}]

	service {
		use_api      = "false"
		where_clause = "Name='Dhcp' OR Name='Dnscache' OR Name='EventLog' OR Name='eventlog' OR Name='LanmanServer' OR Name='LanmanWorkstation' OR Name='lmhosts' OR Name='MSDTC' OR Name='Netlogon' OR Name='NlaSvc' OR Name='PlugPlay' OR Name='RemoteRegistry' OR Name='RpcSs' OR Name='SamSs' OR Name='Schedule' OR Name='Seclogon' OR Name='SNMP' OR Name='W32Time' OR Name='Winmgmt' OR Name='WinRM' OR Name='Workstation' OR Name='VMTools'"
	}
}

discovery.relabel "integrations_windows_exporter" {
	targets = prometheus.exporter.windows.integrations_windows_exporter.targets

	rule {
		target_label = "job"
		replacement  = "integrations/windows_exporter"
	}
}

prometheus.scrape "integrations_windows_exporter" {
	targets    = discovery.relabel.integrations_windows_exporter.output
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/windows_exporter"
}
