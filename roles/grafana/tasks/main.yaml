---
- name: Create grafana folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: poduser
    group: poduser
    recurse: true
  loop:
    # - /opt/grafana
    - /opt/grafana/dashboards
    # - /opt/grafana/dashboardfiles
    - /opt/grafana/datasources
  become: true
  become_method: sudo
  become_user: root

- name: Create github key
  ansible.builtin.template:
    src: ssh-key-git.key.j2
    dest: /var/tmp/ssh-key-git.key
    mode: '0400'

- name: Pull down configs from git
  ansible.builtin.git:
    repo: 'git@github.com:eingram23/configs.git'
    dest: /var/tmp/configs
    clone: true
    key_file: /var/tmp/ssh-key-git.key
    accept_hostkey: true

- name: Delete key
  ansible.builtin.file:
    path: /var/tmp/ssh-key-git.key
    state: absent

- name: Create grafana datasource provisioning file on remote server
  ansible.builtin.template:
    src: datasources.yaml.j2
    dest: /opt/grafana/datasources/datasources.yaml
    mode: '0644'
    owner: poduser
    group: poduser

- name: Open firewall ports
  ansible.builtin.include_role:
    name: eingram23.homelab.firewall
    apply:
      become: true
      become_method: sudo
      become_user: root

- name: Create and run grafana container
  containers.podman.podman_container:
    name: "{{ container_name }}"
    image: docker.io/grafana/grafana:{{ ver }}
    state: started
    restart_policy: always
    pod: "{{ pod_name }}"
    env:
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: true
      GF_INSTALL_PLUGINS: grafana-piechart-panel;https://github.com/flant/grafana-statusmap/releases/download/v0.5.1/flant-statusmap-panel-0.5.1.zip;flant-statusmap-panel
    volume:
      # - "{{ container_name }}_config:/etc/grafana"
      # - "{{ container_name }}_data:/var/lib/grafana"
      - "/opt/grafana/dashboards:/etc/grafana/provisioning/dashboards"
      # - "/opt/grafana/dashboardfiles:/var/lib/grafana/dashboards"
      - "/opt/grafana/datasources:/etc/grafana/provisioning/datasources"

- name: Find dashboards on remote server
  ansible.builtin.find:
    paths:
      - "/var/tmp/configs/grafana/dashboards/"
    patterns:
      - "*"
  register: dashboards

- name: Copy grafana dashboards to remote server
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: /opt/grafana/dashboards
    mode: '0644'
    owner: poduser
    group: poduser
    remote_src: true
  loop: "{{ dashboards.files }}"
  notify: Restart grafana container