---
- name: Install env for {{ app_name }}
  ansible.builtin.include_role:
    name: eingram23.containers.common
    tasks_from: create_env

- name: Run tasks as {{ user_account }}
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ user_account }}"
  block:
    - name: Create github key
      ansible.builtin.template:
        src: ssh-key-git.key.j2
        dest: /var/tmp/ssh-key-git.key
        mode: '0400'

    - name: Pull down configs repo from git
      ansible.builtin.git:
        repo: 'git@github.com:eingram23/configs.git'
        dest: /var/tmp/configs
        key_file: /var/tmp/ssh-key-git.key
        accept_hostkey: true
        force: true

    - name: Delete github key
      ansible.builtin.file:
        path: /var/tmp/ssh-key-git.key
        state: absent

    - name: Copy grafana dashboard json files to remote server
      ansible.builtin.copy:
        src: /var/tmp/configs/grafana/{{ item }}
        dest: /opt/{{ app_name }}/dashboards/
        mode: '0644'
        remote_src: true
      with_fileglob: "*.json"

    - name: Remove configs repo
      ansible.builtin.file:
        path: /var/tmp/configs
        state: absent

    - name: Copy grafana dashboard json files to remote server
      ansible.builtin.copy:
        src: /var/tmp/{{ item }}
        dest: /opt/{{ app_name }}/dashboards/
        mode: '0644'
      with_fileglob: "*.json"

    - name: Copy grafana config to remote server
      ansible.builtin.copy:
        src: dashboards.yaml
        dest: /opt/{{ app_name }}/dashboards/
        mode: '0644'

    - name: Create grafana datasource config on remote server
      ansible.builtin.template:
        src: datasources.yaml.j2
        dest: /opt/{{ app_name }}/datasources/datasources.yaml
        mode: '0644'

    - name: Prep for upgrade
      when: upgrade == "yes"
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: upgrade

    - name: Create and run container {{ app_name }}
      containers.podman.podman_container:
        name: "{{ app_name }}"
        image: "{{ image }}:{{ ver }}"
        state: stopped
        restart_policy: always
        user: 472
        publish:
          - "3000:3000"
        env:
          GF_INSTALL_PLUGINS: "grafana-clock-panel, flant-statusmap-panel, marcusolsson-treemap-panel"
        volume:
          - /opt/{{ app_name }}/dashboards:/etc/grafana/provisioning/dashboards
          - /opt/{{ app_name }}/datasources:/etc/grafana/provisioning/datasources
          - "{{ app_name }}-data:/var/lib/grafana"
        generate_systemd:
          path: /home/{{ user_account }}/.config/systemd/user
          restart_policy: always

    - name: Enable service for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: enable_sysd
