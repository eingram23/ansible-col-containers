---
- name: Install env for {{ app_name }}
  ansible.builtin.include_role:
    name: eingram23.containers.common
    tasks_from: create_env

- name: Run tasks as {{ user_account }}
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ user_account }}"
  block:
    - name: Run podman unshare to allow container access to folder
      ansible.builtin.shell:
        podman unshare chown -R 0:0 /opt/{{ app_name }}
      become_user: "{{ user_account }}"
      become_method: sudo

    - name: Copy loki files to remote server
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /opt/{{ app_name }}/{{ item }}
        mode: '0644'
        owner: poduser
        group: poduser
      loop:
        - local-config.yaml
        - rules.yml

    - name: Run podman unshare to allow container access to files
      ansible.builtin.shell:
        podman unshare chown -R 10001:10001 /opt/{{ app_name }}
      become_user: "{{ user_account }}"
      become_method: sudo

    - name: Prep for upgrade
      when: upgrade == "yes"
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: upgrade

    - name: Create and run container for {{ app_name }}
      containers.podman.podman_container:
        name: "{{ app_name }}"
        image: "{{ image }}:{{ ver }}"
        state: stopped
        restart_policy: always
        publish: "{{ publish_port }}"
        command: >
          -config.file=/etc/loki/local-config.yaml
        volume:
          - /opt/{{ app_name }}/local-config.yaml:/etc/loki/local-config.yaml
          - /opt/{{ app_name }}/rules.yml:/tmp/loki/rules/fake/rules.yml
          - "{{ app_name }}-data:/loki"
        generate_systemd:
          path: "{{ '/home/' + user_account + '/.config/systemd/user' if user_account != 'root' else '/etc/systemd/system' }}"
          restart_policy: always

    - name: Enable service for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: enable_sysd
