---
- name: Create site supporting folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: true
    mode: '0755'
  loop:
    - "{{ approot }}"
    - "{{ builddir }}"

- name: Create github key
  ansible.builtin.template:
    src: ssh-key-git.key.j2
    dest: /root/ssh-key-git.key
    mode: '0400'
  tags: code_update

- name: Clone www.ycdisp.com repo from github
  ansible.builtin.git:
    repo: "{{ repo }}www.ycdisp.com.git"
    dest: "{{ approot }}"
    clone: true
    key_file: /root/ssh-key-git.key
    accept_hostkey: true
    update: true
    force: true
  tags: code_update

- name: Set perms on webfiles
  ansible.builtin.shell:
    cmd: |
      find {{ approot }}/public_html -type d -exec chmod 0755 {} \;
      find {{ approot }}/public_html -type f -exec chmod 0644 {} \;

- name: Clone Containers repo from github
  ansible.builtin.git:
    repo: "{{ repo }}Containers.git"
    dest: "{{ builddir }}"
    key_file: /root/ssh-key-git.key
    accept_hostkey: true
    clone: true
    update: true
    force: true

- name: Remove github key
  ansible.builtin.file:
    path: /root/ssh-key-git.key
    state: absent
  tags: code_update

- name: Build ycdisp.com-web image
  containers.podman.podman_image:
    name: "{{ app }}-web"
    path: "{{ builddir }}ycdisp.com/apache"
    force: true
    build:
      extra_args: --build-arg PASSWORD={{ smtp_pw }}

- name: Copy sql backup to build Location
  ansible.builtin.copy:
    src: yandcprod.sql
    dest: "{{ builddir }}ycdisp.com/mariadb"

- name: Build ycdisp.com-db image
  containers.podman.podman_image:
    name: "{{ app }}-db"
    path: "{{ builddir }}ycdisp.com/mariadb"
    force: true

- name: Create ycdisp.com pod
  containers.podman.podman_pod:
    name: "{{ app }}"
    state: started

- name: Run ycdisp.com-web container
  containers.podman.podman_container:
    name: "{{ app }}-web"
    image: localhost/{{ app }}-web
    env:
      VIRTUAL_HOST: "{{ env }}.ycdisp.com"
    volume:
      - "{{ approot }}/public_html:/var/www/html:z"
    state: started
    restart_policy: always
    pod: "{{ app }}"
    generate_systemd:
      path: /etc/systemd/system
      restart_policy: always

- name: Run ycdisp.com-db container
  containers.podman.podman_container:
    name: "{{ app }}-db"
    image: localhost/{{ app }}-db
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root }}"
      MYSQL_DATABASE: yandcprod
      MYSQL_USER: yandcprod
      MYSQL_PASSWORD: "{{ mysql_yandcprod }}"
    volume:
      - yandctest-data:/var/lib/mysql
    state: started
    restart_policy: always
    pod: "{{ app }}"
    generate_systemd:
      path: /etc/systemd/system
      restart_policy: always

- name: Configure connection string
  ansible.builtin.lineinfile:
    path: "{{ approot }}/public_html/includes/globals.ini.php"
    search_string: "{{ item.search }}"
    line: "{{ item.replace }}"
  loop:
    - { search: '$database_dbc = "dbname";', replace: '$database_dbc = "yandcprod";' }
    - { search: '$username_dbc = "username";', replace: '$username_dbc = "yandcprod";' }
    - { search: '$password_dbc = "password";', replace: '$password_dbc = "{{ mysql_yandcprod }}";' }

- block:
    - name: Change site URL in globals.ini.php to test.ycdisp.com (if env = test)
      ansible.builtin.lineinfile:
        path: "{{ approot }}/public_html/includes/globals.ini.php"
        search_string: 'define("siteUrl","http://www.ycdisp.com/");'
        line: 'define("siteUrl","http://test.ycdisp.com/");'

    - name: Change site URL in scripts.cart.js to test.ycdisp.com (if env = test)
      ansible.builtin.lineinfile:
        path: "{{ approot }}/public_html/js/scripts.cart.js"
        search_string: "$('.labels a').attr('href','http://www.ycdisp.com/get-quote/');"
        line: "$('.labels a').attr('href','http://test.ycdisp.com/get-quote/');"
  when: env == "test"

- block:
    - name: Remove build folder
      ansible.builtin.file:
        path: "{{ builddir }}"
        state: absent

    - name: Remove read permissions on admin/index.php
      ansible.builtin.file:
        path: "{{ approot }}/public_html/admin/index.php"
        state: files
        mode: u-r,g-r,o-r
  when: env == "www"


- name: Enable container services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - "container-{{ app }}-web"
    - "container-{{ app }}-db"

- name: Restart ycdisp.com apache container
  containers.podman.podman_container:
    name: "{{ app }}-web"
    image: localhost/{{ app }}-web
    state: started
    restart: true
  tags:
    - code_update
    - never