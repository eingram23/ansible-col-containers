- name: Run root tasks
  become: true
  become_method: ansible.builtin.sudo
  become_user: root
  block:
    - name: Create user if needed
      ansible.builtin.include_role:
        name: eingram23.linux.user_mgmt
        tasks_from: add_user
      vars:
        user_account: "{{ user_account }}"
        user_password: "{{ lookup('hashi_vault', 'secret=secret/ssh/ansible:ssh_password') }}"
        admin_user: "no"

    - name: Ensure podman is installed
      ansible.builtin.package:
        name: "{{ podman_items }}"
        state: present
      loop:
        - podman
        - podman-compose
        - podman-plugins
        - podman-remote
      loop_control:
        loop_var: podman_items

    - name: Enable linger for user {{ user_account }}
      when: user_account != "root"
      ansible.builtin.command: loginctl enable-linger {{ user_account }}
      args:
        creates: /var/lib/systemd/linger/{{ user_account }}

    - name: Set default logging driver to journald if rootless
      when: user_account != "root"
      block:
        - name: Create containers folder
          ansible.builtin.file:
            path: "/home/{{ user_account }}/.config/containers"
            state: directory
            owner: "{{ user_account }}"
            group: "{{ user_account }}"
            mode: '0755'

        - name: Copy containers.conf
          ansible.builtin.copy:
            src: containers.conf
            dest: "/home/{{ user_account }}/.config/containers/containers.conf"
            owner: "{{ user_account }}"
            group: "{{ user_account }}"
            mode: '0644'

    - name: Open firewall port
      when: fw_port is defined
      ansible.builtin.include_role:
        name: eingram23.linux.firewall

    - name: Create folder for {{ app_name }}
      ansible.builtin.file:
        path: /opt/{{ app_name }}
        state: directory
        mode: '0755'
        owner: "{{ user_account }}"
        group: "{{ user_account }}"
