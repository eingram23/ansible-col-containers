---
- name: Run root tasks
  become: true
  become_method: sudo
  become_user: root
  block:
    - name: Disable SELinux (for allowing samba share on PlexMedia with podman)
      ansible.posix.selinux:
        state: disabled

    - name: Enable linger for {{ user_account }} user
      ansible.builtin.command: loginctl enable-linger {{ user_account }}

    - name: Open firewall port
      ansible.builtin.include_role:
        name: eingram23.linux.firewall

    - name: Change user/owner of Plex files to {{ user_account }}
      ansible.builtin.file:
        path: /mnt/pool0/PlexMedia
        state: directory
        owner: "{{ user_account }}"
        group: "{{ user_account }}"
        mode: '0755'
        recurse: true

- name: Prep for upgrade
  when: upgrade == "yes"
  block:
    - name: Stop systemd service for container - {{ app_name }}
      ansible.builtin.systemd:
        name: container-{{ app_name }}
        state: stopped
        scope: user

    - name: Remove container - {{ app_name }}
      containers.podman.podman_container:
        name: "{{ app_name }}"
        state: absent

    - name: Remove image for {{ app_name }}
      containers.podman.podman_image:
        name: lscr.io/linuxserver/plex:latest
        state: absent

- name: Create and run container - {{ app_name }}
  containers.podman.podman_container:
    name: "{{ app_name }}"
    image: "{{ image }}:{{ ver }}"
    state: stopped
    restart_policy: always
    env:
      PUID=0
      PGID=0
      VERSION=docker
      TZ=America/Los_Angeles
    network_mode: host
    # device: "/dev/dri:/dev/dri"
    volume:
      - /mnt/pool0/PlexMedia/config:/config:Z
      - /mnt/pool0/PlexMedia/Movies:/movies:Z
      - /mnt/pool0/PlexMedia/3DMovies:/3dmovies:Z
      - /mnt/pool0/PlexMedia/AnimMovies:/animmovies:Z
      - /mnt/pool0/PlexMedia/TVShows:/tvshows:Z
      - /mnt/pool0/PlexMedia/AnimTVShows:/animtvshows:Z
      - /mnt/pool0/PlexMedia/Videos:/videos:Z
    generate_systemd:
      path: /home/{{ user_account }}/.config/systemd/user
      restart_policy: always

- name: Set XDG_RUNTIME_DIR env variable
  ansible.builtin.lineinfile:
    path: /home/{{ user_account }}/.bash_profile
    search_string: 'export XDG_RUNTIME_DIR=/run/user/$(id -u)'
    insertafter: '# User specific environment and startup programs'
    line: 'export XDG_RUNTIME_DIR=/run/user/$(id -u)'

- name: Get info for {{ user_account }}
  ansible.builtin.user:
    name: "{{ user_account }}"
  register: user_info

- name: Enable service - container-{{ app_name }}
  ansible.builtin.systemd:
    name: container-{{ app_name }}
    state: started
    enabled: true
    daemon_reload: true
    scope: user
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ user_info.uid }}