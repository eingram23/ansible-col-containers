---
- name: Install env for {{ app_name }}
  ansible.builtin.include_role:
    name: eingram23.containers.common
    tasks_from: create_env

- name: Run tasks as {{ user_account }}
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ user_account }}"
  block:
    - name: Create github key
      ansible.builtin.template:
        src: ssh-key-git.key.j2
        dest: /var/tmp/ssh-key-git.key
        mode: '0400'

    - name: Pull down configs repo from git
      ansible.builtin.git:
        repo: 'git@github.com:eingram23/configs.git'
        dest: /var/tmp/configs
        key_file: /var/tmp/ssh-key-git.key
        accept_hostkey: true
        force: true

    - name: Delete github key
      ansible.builtin.file:
        path: /var/tmp/ssh-key-git.key
        state: absent

    - name: Copy prometheus rules to remote server
      ansible.builtin.copy:
        src: /var/tmp/configs/prometheus/rules/{{ item }}
        dest: /opt/{{ app_name }}/
        mode: '0644'
        remote_src: true
      with_fileglob: "*.rules"

    - name: Copy prometheus config to remote server
      ansible.builtin.copy:
        src: /var/tmp/configs/prometheus/prometheus.yml
        dest: /opt/{{ app_name }}/
        remote_src: true
        mode: '0644'

    - name: Remove configs repo
      ansible.builtin.file:
        path: /var/tmp/configs
        state: absent
    - name: Copy prometheus files to remote server
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /opt/{{ app_name }}/
        mode: '0644'
      with_fileglob: "*"

    # - name: Create ca.crt on remote server
    #   ansible.builtin.template:
    #     src: ca.crt.j2
    #     dest: /opt/{{ app_name }}/ca.crt
    #     mode: '0644'
    #     owner: poduser
    #     group: poduser

    # - name: Create tls.crt on remote server
    #   ansible.builtin.template:
    #     src: tls.crt.j2
    #     dest: /opt/{{ app_name }}/tls.crt
    #     mode: '0644'
    #     owner: poduser
    #     group: poduser

    # - name: Create tls.key on remote server
    #   ansible.builtin.template:
    #     src: tls.key.j2
    #     dest: /opt/{{ app_name }}/tls.key
    #     mode: '0444'
    #     owner: poduser
    #     group: poduser

    - name: Prep for upgrade
      when: upgrade == "yes"
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: upgrade

    - name: Create and run container for {{ app_name }}
      containers.podman.podman_container:
        name: "{{ app_name }}"
        image: "{{ image }}:{{ ver }}"
        state: stopped
        restart_policy: always
        publish: "{{ publish_port }}"
        command: >
          --config.file=/etc/prometheus/prometheus.yml
          --storage.tsdb.path=/prometheus
          --storage.tsdb.retention.time=7d
          --storage.tsdb.retention.size=10GB
          --web.console.libraries=/usr/share/prometheus/console_libraries
          --web.console.templates=/usr/share/prometheus/consoles
          --web.external-url=http://prom.local.lan:9090
          --web.enable-remote-write-receiver
        volume:
          - /opt/{{ app_name }}/:/etc/prometheus/
          - "{{ app_name }}-data:/prometheus"
        generate_systemd:
          path: "{{ '/home/' + user_account + '/.config/systemd/user' if user_account != 'root' else '/etc/systemd/system' }}"
          restart_policy: always

    - name: Enable service for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: enable_sysd
