---
- name: Create supporting folder structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  loop:
    - "{{root}}"
    - /home/poduser/.ssh
    # - /home/poduser/.config/systemd/user

- name: Copy github private key to remote host
  ansible.builtin.copy:
    src: ssh-key-ansible.key
    dest: /home/poduser/.ssh/
    mode: '0600'

# - name: Pause playbook until web files are uploaded to host
#   pause:
#     prompt: "Make sure web file backup is in /home/poduser and renamed to sitebackup.tar.gz"
    
- name: Clone www.ycdisp.com repo from github
  git:
    repo: "{{repo}}{{app}}.git"
    dest: "{{root}}{{app}}"
    clone: yes
    key_file: /home/poduser/.ssh/ssh-key-ansible.key
    accept_hostkey: yes
    update: yes
    force: yes

- name: Clone Containers repo from github
  git:    
    repo: "{{repo}}Containers.git"
    dest: "{{root}}Containers"
    key_file: /home/poduser/.ssh/ssh-key-ansible.key
    accept_hostkey: yes
    clone: yes
    update: yes

- name: Build test.ycdisp.com-web image
  containers.podman.podman_image:
    name: "{{app}}-web"
    path: "{{root}}Containers/{{container}}/{{container}}-web"
    force: yes
    build:
      extra_args: --build-arg PASSWORD={{ smtp_pw }}

- name: Copy sql backup to build Location
  ansible.builtin.copy:
    src: yandcprod.sql
    dest: "{{root}}Containers/{{container}}/{{container}}-db"

- name: Build test.ycdisp.com-db image
  containers.podman.podman_image:
    name: "{{app}}-db"
    path: "{{root}}Containers/{{container}}/{{container}}-db"
    force: yes

- name: Create test.ycdisp.com pod
  containers.podman.podman_pod:
    name: "{{app}}"
    state: started
    publish: "{{nginx_port}}:80"

- name: Run test.ycdisp.com-web container
  containers.podman.podman_container:
    name: "{{app}}-web"
    image: localhost/{{app}}-web
    volume: 
      - "{{root}}{{app}}/public_html:/var/www/html:z"
    state: started
    restart_policy: always
    pod: "{{app}}"

- name: Run test.ycdisp.com-db container
  containers.podman.podman_container:
    name: "{{app}}-db"
    image: localhost/{{app}}-db
    env:
      MYSQL_ROOT_PASSWORD: "{{mysql_root}}"
      MYSQL_DATABASE: yandcprod
      MYSQL_USER: yandcprod
      MYSQL_PASSWORD: "{{mysql_yandcprod}}"
    volume: 
      - yandctest-data:/var/lib/mysql
    state: started
    restart_policy: always
    pod: "{{app}}"

- name: Configure connection string
  ansible.builtin.lineinfile:
    path: "{{root}}{{app}}/public_html/includes/globals.ini.php"
    search_string: "{{ item.search }}"
    line: "{{ item.replace }}"
  loop:
    - { search: '$database_dbc = "dbname";', replace: '$database_dbc = "yandcprod";' }
    - { search: '$username_dbc = "username";', replace: '$username_dbc = "yandcprod";' }
    - { search: '$password_dbc = "password";', replace: '$password_dbc = "{{mysql_yandcprod}}";' }

    
    




    
    