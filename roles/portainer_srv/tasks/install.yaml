---
- name: Open firewall ports
  ansible.builtin.include_role:
    name: eingram23.linux.firewall

# - name: Ensure vars are set
#   ansible.builtin.assert:
#     that:
#       - env == "dev" or env == "prod"

- name: Make sure podman env is installed
  ansible.builtin.package:
    name: "{{ podman_items }}"
    state: present
  loop_control:
    loop_var: podman_items
  loop:
    - podman
    - podman-compose
    - podman-plugins
    - podman-remote

- name: Enable and start podman.socket
  ansible.builtin.systemd:
    name: podman.socket
    state: started
    enabled: true

- name: Prep for upgrade
  when: upgrade == "yes"
  block:
    - name: Stop systemd service for {{ app_name }} container
      ansible.builtin.systemd:
        name: container-{{ app_name }}
        state: stopped

    - name: Remove {{ app_name }} container
      containers.podman.podman_container:
        name: "{{ app_name }}"
        state: absent

    - name: Cleanup old image
      containers.podman.podman_image:
        name: "{{ image }}:{{ old_ver }}"
        state: absent

- name: Run {{ app_name }} container
  containers.podman.podman_container:
    name: "{{ app_name }}"
    image: "{{ image }}:{{ ver }}"
    state: stopped
    restart_policy: always
    privileged: true
    publish: "{{ publish_port }}"
    volume:
      - /run/podman/podman.sock:/var/run/docker.sock
      - "{{ app_name }}_data:/data"
    generate_systemd:
      path: /etc/systemd/system
      restart_policy: always

- name: Enable container-{{ app_name }} service
  ansible.builtin.systemd:
    name: container-{{ app_name }}
    state: started
    enabled: true
    daemon_reload: true
