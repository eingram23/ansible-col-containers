---
- name: Assert that user_account is 'defined'
  ansible.builtin.assert:
    that:
      - user_account is defined
    fail_msg: "user_account is not defined"
    success_msg: "user_account is defined"

- name: Set rootless vars
  when: user_account != "root"
  block:
    - name: Get user info for {{ user_account }}
      ansible.builtin.getent:
        database: passwd
        key: "{{ user_account }}"

    - name: Get user id for {{ user_account }}
      ansible.builtin.set_fact:
        uid: "{{ getent_passwd[user_account][1] }}"

    - name: Obtain new port for accessing cadvisor
      ansible.builtin.set_fact:
        app_port: "{{ ((uid | int) + 7085) | string }}"

    - name: Set new ports for cadvisor
      ansible.builtin.set_fact:
        "{{ item.key }}": "{{ item.value }}"
      loop:
        - { key: 'fw_port', value: ["{{ app_port }}/tcp"] }
        - { key: 'publish_port', value: ["{{ app_port }}:8080"] }

- name: Install env for {{ app_name }}
  ansible.builtin.include_role:
    name: eingram23.containers.common
    tasks_from: create_env

- name: Run tasks as {{ user_account }}
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ user_account }}"
  block:
    - name: Prep for upgrade
      when: upgrade == "yes"
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: upgrade

    - name: Create container for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: create_container

    - name: Enable service for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: enable_sysd

    - name: Display app port
      ansible.builtin.debug:
        msg: "Access {{ app_name }} at http://{{ ansible_fqdn }}:{{ app_port }}"
