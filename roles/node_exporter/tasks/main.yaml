---
- name: Open firewall ports
  ansible.builtin.include_role:
    name: eingram23.homelab.firewall
    apply:
      become: true
      become_method: sudo
      become_user: root

- name: Enable processes collector
  ansible.builtin.set_fact:
    collect_processes: --collector.processes
  when: processes == "yes"

- name: Enable systemd collector
  ansible.builtin.set_fact:
    collect_systemd: --collector.systemd
  when: systemd == "yes"

- name: Run node-exporter container
  containers.podman.podman_container:
    name: node-exporter
    image: docker.io/prom/node-exporter:{{ ver }}
    state: started
    restart_policy: unless-stopped
    privileged: true
    network: host
    pid: host
    command: >
      --path.rootfs=/host
      {{ collect_processes }}
      {{ collect_systemd }}
    volume:
      - /:/host:ro,rslave
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:rw
    generate_systemd:
      path: /home/poduser/.config/systemd/user
      restart_policy: always

- name: Check if poduser is lingering
  ansible.builtin.stat:
    path: /var/lib/systemd/linger/poduser
  register: poduser_lingering

- name: Enable lingering if needed
  ansible.builtin.command: "loginctl enable-linger podman"
  when: not poduser_lingering.stat.exists
  become: true
  become_method: sudo
  become_user: root

- name: Set XDG_RUNTIME_DIR env variable
  ansible.builtin.lineinfile:
    path: /home/poduser/.bash_profile
    search_string: 'export XDG_RUNTIME_DIR=/run/user/$(id -u)'
    insertafter: '# User specific environment and startup programs'
    line: 'export XDG_RUNTIME_DIR=/run/user/$(id -u)'

- name: Enable container-node-exporter service
  ansible.builtin.systemd:
    name: container-node-exporter
    state: started
    enabled: true
    daemon_reload: true
    scope: user
