---
# - name: Create supporting folder structure
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: directory
#     owner: poduser
#     group: poduser
#     mode: 0775
#   loop:
#     - "{{ root }}{{ app }}"
#     - /home/poduser/.config/systemd/user

- name: Check if dfsitebackup.tar.gz exists
  stat:
    path: /home/poduser/dbsitebackup.tar.gz
    register: dbsitebackup

- name: Stop playbook if dfsitebackup.tar.gz doesn't exist
  fail:
    msg: "dbsitebackup.tar.gz not found"
  when: not dbsitebackup.stat.exists

- name: Check if dfsqlbackup.bak.gz exists
  stat:
    path: /home/podusr/dbsqlbackup.bak.gz
    register: dbsqlbackup

- name: Stop playbook if dfsqlbackup.tar.gz doesn't exist
  fail:
    msg: "dbsqlbackup.tar.gz not found"
  when: not dbsqlbackup.stat.exists

- name: Create github key
  ansible.builtin.template:
    src: ssh-key-git.key.j2
    dest: /home/poduser/.ssh/ssh-key-git.key
    mode: '0400'

- name: Extract web files to html root
  ansible.builtin.unarchive:
    src: /home/poduser/dfsitebackup.tar.gz
    dest: "{{ root }}{{ app }}/"
    remote_src: yes
    extra_opts: [--strip-components=4]

- name: Create Settings.php
  ansible.builtin.template:
    src: Settings.php.j2
    dest: "{{ root }}{{ app }}/public_html/Settings.php"

- name: Copy repair_settings.php
  ansible.builtin.copy:
    src: repair_settings.php
    dest: "{{ root }}{{ app }}/public_html/repair_settings.php"

- name: Set perms on webfiles
  ansible.builtin.shell:
    cmd: |
      find {{ root }}{{ app }}/public_html -type d -exec chmod 0755 {} \;
      find {{ root }}{{ app }}/public_html -type f -exec chmod 0644 {} \;
      podman unshare chown -R 33:33 {{ root }}{{ app }}/public_html/

- name: Clone Containers repo from github
  git:    
    repo: "{{ repo }}Containers.git"
    dest: "{{ root }}Containers"
    key_file: /home/poduser/.ssh/ssh-key-git.key
    accept_hostkey: yes
    clone: yes
    update: yes

- name: Build diversionforum.net-web image
  containers.podman.podman_image:
    name: "{{ app }}-nginx"
    path: "{{ root }}Containers/{{ app }}/nginx"
    force: yes

- name: Build diversionforum.net-php image
  containers.podman.podman_image:
    name: "{{ app }}-php"
    path: "{{ root }}Containers/{{ app }}/php"
    force: yes

- name: Extract df sql backup
  ansible.builtin.shell: gunzip -c /home/poduser/dfsqlbackup.bak.gz > {{ root }}Containers/{{ app }}/mariadb/smfprod.sql

- name: Build diversionforum.net-mariadb image
  containers.podman.podman_image:
    name: "{{ app }}-mariadb"
    path: "{{ root }}Containers/{{ app }}/mariadb"
    force: yes

- name: Create diversionforum.net pod
  containers.podman.podman_pod:
    name: "{{ app }}"
    state: started
    # publish: "{{nginx_port}}:{{nginx_port}}"
    publish: 8080:80

- name: Run diversionforum.net-web container
  containers.podman.podman_container:
    name: "{{ app }}-nginx"
    image: localhost/{{ app }}-nginx
    volume: 
      - "{{ root }}{{ app }}/public_html:/var/www/html:z"
    state: started
    restart_policy: always
    pod: "{{ app }}"

- name: Run diversionforum.net-php container
  containers.podman.podman_container:
    name: "{{ app }}-php"
    image: localhost/{{ app }}-php
    volume: 
      - "{{ root }}{{ app }}/public_html:/var/www/html"
    state: started
    restart_policy: always
    pod: "{{ app }}"

- name: Run diversionforum.net-mariadb container
  containers.podman.podman_container:
    name: "{{ app }}-mariadb"
    image: localhost/{{ app }}-mariadb
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root }}"
      MYSQL_DATABASE: smfprod
      MYSQL_USER: smfprod
      MYSQL_PASSWORD: "{{ mysql_smfprod }}"
    volume: 
      - smf{{ env }}-data:/var/lib/mysql
    state: started
    restart_policy: always
    pod: "{{ app }}"
