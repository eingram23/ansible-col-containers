---
- name: Assert that user_account is 'defined'
  ansible.builtin.assert:
    that:
      - user_account is defined
    fail_msg: "user_account is not defined"
    success_msg: "user_account is defined"

- name: Set rootless vars
  when: user_account != "root"
  block:
    - name: Get user info for {{ user_account }}
      ansible.builtin.getent:
        database: passwd
        key: "{{ user_account }}"

    - name: Get user id for {{ user_account }}
      ansible.builtin.set_fact:
        uid: "{{ getent_passwd[user_account][1] }}"

    - name: Obtain new port for accessing portainer agent
      ansible.builtin.set_fact:
        new_port: "{{ ((uid | int) + 8000) | string }}"

    - name: Set new ports for portainer agent
      ansible.builtin.set_fact:
        "{{ item.key }}": "{{ item.value }}"
      loop:
        - { key: 'fw_port', value: ["{{ new_port }}/tcp"] }
        - { key: 'publish_port', value: ["{{ new_port }}:9001"] }

- name: Install env for {{ app_name }}
  ansible.builtin.include_role:
    name: eingram23.containers.common
    tasks_from: create_env

- name: Run tasks as {{ user_account }}
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ user_account }}"
  block:
    - name: Enable and start podman.socket
      ansible.builtin.systemd:
        name: podman.socket
        state: started
        scope: "{{ 'user' if user_account != 'root' else 'system' }}"
        enabled: true

    - name: Prep for upgrade
      when: upgrade == "yes"
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: upgrade

    - name: Run container for {{ app_name }}
      containers.podman.podman_container:
        name: "{{ app_name }}"
        image: "{{ image }}:{{ ver }}"
        state: stopped
        restart_policy: always
        privileged: true
        publish: "{{ publish_port }}"
        volume:
          - >-
            {{ '/run/podman/podman.sock:/var/run/docker.sock'
            if user_account == 'root'
            else '/run/user/' + uid + '/podman/podman.sock:/var/run/docker.sock' }}
          - >-
            {{ '/var/lib/containers/storage:/var/lib/docker/volumes'
              if user_account == 'root'
              else '/home/' + user_account + '/.local/share/containers/storage:/var/lib/docker/volumes'
            }}
        generate_systemd:
          path: "{{ '/home/' + user_account + '/.config/systemd/user' if user_account != 'root' else '/etc/systemd/system' }}"
          restart_policy: always

    - name: Enable service for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: enable_sysd

    - name: Set agent endpoint
      ansible.builtin.set_fact:
        agent_endpoint: "http://{{ inventory_hostname }}:{{ new_port }}"

    - name: Add endpoint to portainer server
      ansible.builtin.include_tasks:
        file: add_endpoint.yaml
