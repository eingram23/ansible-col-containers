---
- name: Install env for {{ app_name }}
  ansible.builtin.include_role:
    name: eingram23.containers.common
    tasks_from: create_env

- name: Run tasks as {{ user_account }}
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ user_account }}"
  block:
    - name: Check net.ipv4.ip_unprivileged_port_start value
      ansible.builtin.command: grep -oP '^net.ipv4.ip_unprivileged_port_start=\K\d+' /etc/sysctl.conf
      register: sysctl_conf
      ignore_errors: true
      changed_when: false

    - name: Set net.ipv4.ip_unprivileged_port_start if needed
      become: true
      become_user: root
      ansible.builtin.sysctl:
        name: net.ipv4.ip_unprivileged_port_start
        value: '116'
      when: sysctl_conf.stdout == "" or (sysctl_conf.stdout | int) > 116

    - name: Copy snmp_exporter files to remote server
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /opt/{{ app_name }}/{{ item }}
        mode: '0644'
      loop:
        - snmp.yml

    - name: Prep for upgrade
      when: upgrade == "yes"
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: upgrade

    - name: Create and run container for {{ app_name }}
      containers.podman.podman_container:
        name: "{{ app_name }}"
        image: "{{ image }}:{{ ver }}"
        state: stopped
        restart_policy: always
        publish: "{{ publish_port }}"
        command: >
          --config.file=/etc/snmp_exporter/snmp.yml
        volume:
          - /opt/{{ app_name }}:/etc/snmp_exporter
        generate_systemd:
          path: "{{ '/home/' + user_account + '/.config/systemd/user' if user_account != 'root' else '/etc/systemd/system' }}"
          restart_policy: always

    - name: Enable service for {{ app_name }}
      ansible.builtin.include_role:
        name: eingram23.containers.common
        tasks_from: enable_sysd
